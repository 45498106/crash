{"version":3,"sources":["../src/CrashBody.js"],"names":["define","require","exports","module","PIXI","Math2","Vector","CrashBody","shape","type","DYNAMIC","passthrough","currentSurface","position","Point","timeScale","velocity","acceleration","bounce","maxSpeed","maxSpeedY","gravity","friction","sleeping","solid","active","remainder","flip","prototype","setMaxSpeed","max","update","deltaTime","x","y","speed","length","Math","min","reset","getDebugView","color","colors","Graphics","beginFill","drawRect","width","height","fromRect","w","h","Rectangle","STATIC","KINIMATIC","NONE"],"mappings":"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","file":"CrashBody.js","sourcesContent":["define(function (require, exports, module)\n{\n    var PIXI = require('PIXI');\n    var Math2 = require('fido/utils/Math2');\n    var Vector = require('./Vector');\n\n    var CrashBody = function( shape )\n    {\n        this.type = CrashBody.DYNAMIC;\n\n        this.shape = shape;\n        this.passthrough = false;\n\n        //TODO extend to outside of top\n        //this.onSurface = false;\n        this.currentSurface = null;\n\n        this.position = new PIXI.Point();\n      //  this.lastPosition = new PIXI.Point();\n\n        this.timeScale = 1;\n        this.velocity = new Vector();\n        this.acceleration = new Vector();\n        this.bounce = 0;\n\n        this.maxSpeed = 3;\n        this.maxSpeedY = 3;//00000;\n        this.gravity = 0//0.1;\n\n        this.friction = 0.9;\n\n        this.sleeping = false;\n\n        this.solid = true;\n        this.active = true;\n\n        this.remainder = 0;\n        this.flip = 1;\n\n        //this.scale = 3;\n    }\n\n    CrashBody.prototype.setMaxSpeed = function(max)\n    {\n        this.maxSpeed = this.maxSpeedY = max;\n    }\n\n    CrashBody.prototype.update = function(deltaTime)\n    {\n        if(!this.active)return;\n\n      //  var dt = this.remainder + Ticker.instance.deltaTime;\n            var velocity = this.velocity\n      //  for (var i = 0; i < dt; i++)\n     //   {\n            velocity.x += this.acceleration.x * deltaTime;\n            velocity.y += this.acceleration.y * deltaTime;\n\n            // frsition...\n            velocity.y *= this.friction;\n            velocity.x *= this.friction;\n            velocity.y += this.gravity * this.timeScale// * this.flip;\n\n            var speed = velocity.length();\n\n            if(speed > 0)\n            {\n                velocity.x /= speed;\n                velocity.y /= speed;\n\n                speed = Math.min(speed,this.maxSpeed);\n\n                velocity.x *= speed;\n                velocity.y *= speed;\n            }\n\n\n            this.position.x += velocity.x * this.timeScale * deltaTime;\n            this.position.y += velocity.y * this.timeScale * deltaTime;\n\n//            dt -= 1;\n  //      };\n\n      //  this.remainder = dt;\n\n\n\n    }\n\n    CrashBody.prototype.reset = function()\n    {\n        this.velocity.x = 0;\n        this.velocity.y = 0;\n\n        this.acceleration.x = 0;\n        this.acceleration.y = 0;\n\n        this.remainder = 0;\n\n        this.active = true;\n    }\n\n    CrashBody.prototype.getDebugView = function(color)\n    {\n        var shape = this.shape;\n        var color = color || colors[this.type]\n        return new PIXI.Graphics().beginFill(color).drawRect(shape.x,shape.y,shape.width, shape.height)\n\n    }\n\n    CrashBody.fromRect = function(x, y, w, h){\n\n        return new CrashBody(new PIXI.Rectangle(x,y,w,h));\n    }\n\n    CrashBody.STATIC = 0;\n    CrashBody.KINIMATIC = 1;\n    CrashBody.DYNAMIC = 2;\n    CrashBody.NONE = 3;\n\n    colors = [\n        0x463a78,\n        0xFFFF00,\n        0xFF0000,\n        0x0000FF\n    ]\n    module.exports = CrashBody;\n\n});"]}