{"version":3,"sources":["../../src/shapes/Line.js"],"names":["Line","length","position","rotation","LINE","s","Math","sin","c","cos","halfLength","start","end","minX","min","x","minY","y","maxX","max","maxY","boundingBox","set"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,I;;;AAEjB,kBAAYC,MAAZ,EAAoBC,QAApB,EAA8BC,QAA9B,EACA;AAAA;;AAAA,qDACI,kBAAM,gBAAMC,IAAZ,EAAkBF,QAAlB,EAA4BC,QAA5B,CADJ;;AAGI,YAAIE,IAAIC,KAAKC,GAAL,CAASJ,QAAT,CAAR;AACA,YAAIK,IAAIF,KAAKG,GAAL,CAASN,QAAT,CAAR;;AAEA,YAAIO,aAAaT,SAAO,CAAxB;AACA,cAAKU,KAAL,GAAc,qBAAW,CAACD,UAAD,GAAcF,CAAzB,EAA4B,CAACE,UAAD,GAAcL,CAA1C,CAAd;AACA,cAAKO,GAAL,GAAc,qBAAYF,aAAaF,CAAzB,EAA6BE,aAAaL,CAA1C,CAAd;;AAEA,YAAIQ,OAAOP,KAAKQ,GAAL,CAAS,MAAKH,KAAL,CAAWI,CAApB,EAAuB,MAAKH,GAAL,CAASG,CAAhC,CAAX;AACA,YAAIC,OAAOV,KAAKQ,GAAL,CAAS,MAAKH,KAAL,CAAWM,CAApB,EAAuB,MAAKL,GAAL,CAASK,CAAhC,CAAX;;AAEA,YAAIC,OAAOZ,KAAKa,GAAL,CAAS,MAAKR,KAAL,CAAWI,CAApB,EAAuB,MAAKH,GAAL,CAASG,CAAhC,CAAX;AACA,YAAIK,OAAOd,KAAKa,GAAL,CAAS,MAAKR,KAAL,CAAWM,CAApB,EAAuB,MAAKL,GAAL,CAASK,CAAhC,CAAX;;AAEA,cAAKI,WAAL,CAAiBC,GAAjB,CAAqB,MAAKpB,QAAL,CAAca,CAAd,GAAkBF,IAAvC,EACqB,MAAKX,QAAL,CAAce,CAAd,GAAkBD,IADvC,EAEqB,MAAKd,QAAL,CAAca,CAAd,GAAkBG,IAFvC,EAGqB,MAAKhB,QAAL,CAAce,CAAd,GAAkBG,IAHvC;;AAhBJ;AAsBC;;;;AAEL;;;;;;;;;;;kBA3BqBpB,I","file":"Line.js","sourcesContent":["import Vector from '../Vector'\nimport AABB from '../AABB';\nimport Shape from './Shape';\n\nexport default class Line extends Shape\n{\n    constructor(length, position, rotation)\n    {\n        super(Shape.LINE, position, rotation);\n\n        var s = Math.sin(rotation);\n        var c = Math.cos(rotation);\n\n        var halfLength = length/2;\n        this.start  = new Vector(-halfLength * c, -halfLength * s);\n        this.end    = new Vector( halfLength * c,  halfLength * s);\n\n        var minX = Math.min(this.start.x, this.end.x);\n        var minY = Math.min(this.start.y, this.end.y);\n\n        var maxX = Math.max(this.start.x, this.end.x);\n        var maxY = Math.max(this.start.y, this.end.y);\n\n        this.boundingBox.set(this.position.x + minX,\n                             this.position.y + minY,\n                             this.position.x + maxX,\n                             this.position.y + maxY);\n\n\n    }\n}\n/*\n    Line.prototype.getView = function(color)\n    {\n        return new PIXI.Graphics().lineStyle(5, color || 0x00FF00).moveTo(this.start.x, this.start.y).lineTo(this.end.x, this.end.y);////drawCircle(0,0,this.radius);\n    }\n\n    module.exports = Line;\n\n*/"]}