{"version":3,"sources":["../../src/collision/rectangleVcircle.js"],"names":["rectangleVcircle","bodyRect","rectangle","bodyCirc","circle","success","fail","s","Math","sin","rotation","c","cos","ox","position","x","oy","y","cx","cy","localCirclePositionRot","localCirclePosition","sub","aabb","radius","rect","halfWidth","width","halfHeight","height","closestPoint","clone","distX","distY","dist","left","leftDist","rightDist","topDist","bottomDist","penetrationLine","penetration","penetrationLine2","minus","length","normalize","temp3"],"mappings":"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","file":"rectangleVcircle.js","sourcesContent":["\nimport Vector from '../Vector';\n\nexport default function rectangleVcircle(bodyRect, rectangle, bodyCirc, circle, success, fail)\n{\n    var s = Math.sin(-rectangle.rotation);\n    var c = Math.cos(-rectangle.rotation);\n\n    var ox = bodyRect.position.x + rectangle.position.x;\n    var oy = bodyRect.position.y + rectangle.position.y;\n\n    var cx = bodyCirc.position.x + circle.position.x;\n    var cy = bodyCirc.position.y + circle.position.y;\n\n    var localCirclePositionRot = new Vector();\n    localCirclePositionRot.x = c * (cx - ox) - s * (cy - oy) + ox;\n    localCirclePositionRot.y = s * (cx - ox) + c * (cy - oy) + oy;\n\n    var localCirclePosition = Vector.sub(localCirclePositionRot, localCirclePosition, aabb.position);\n\n\n    var radius = circle.radius;\n    var rect = rectangle;\n    var halfWidth = rect.width/2;\n    var halfHeight = rect.height/2;\n\n    var closestPoint = Vector.clone(localCirclePosition);\n\n    if(localCirclePosition.x < -halfWidth)\n    {\n        closestPoint.x = -halfWidth;\n    }\n    else if(localCirclePosition.x > halfWidth)\n    {\n        closestPoint.x = halfWidth;\n    }\n\n    if(localCirclePosition.y < -halfHeight)\n    {\n        closestPoint.y = -halfHeight;\n    }\n    else if(localCirclePosition.y > halfHeight)\n    {\n        closestPoint.y = halfHeight;\n    }\n\n\n    var distX = closestPoint.x - localCirclePosition.x;\n    var distY = closestPoint.y - localCirclePosition.y;\n    var dist = distX * distX + distY * distY ;\n\n    if(dist === 0)\n    {\n        closestPoint.x = rect.left;\n\n        var leftDist =  localCirclePosition.x - rect.left;\n        var rightDist = halfWidth - localCirclePosition.x;\n\n        var topDist =  localCirclePosition.y - -halfHeight;\n        var bottomDist = halfHeight - localCirclePosition.y;\n\n        var dist = 999999;\n\n        if(leftDist < dist)dist = leftDist;\n        if(rightDist < dist)dist = rightDist;\n        if(topDist < dist)dist = topDist;\n        if(bottomDist < dist)dist = bottomDist;\n\n        penetrationLine = new Vector();//this.temp4;\n        if(dist == leftDist)\n        {\n            penetrationLine.x =-1\n            penetrationLine.y = 0.00001;\n        }\n        else if(dist == rightDist)\n        {\n            penetrationLine.x = 1\n            penetrationLine.y = 0.00001;\n        }\n        else if(dist == topDist)\n        {\n            penetrationLine.x = 0.00001;\n            penetrationLine.y = -1;\n        }\n        else if(dist == bottomDist)\n        {\n            penetrationLine.x = 0.00001\n            penetrationLine.y = 1;\n        }\n\n        var penetration = -dist-radius;\n\n        penetrationLine2 =  new Vector()//new Vector();\n        penetrationLine2.x = (penetrationLine.x * c) + (penetrationLine.y * s)\n        penetrationLine2.y = (penetrationLine.y * c) - (penetrationLine.x * s)\n\n        // reaction...\n      //  circle.position.x -= penetrationLine2.x * (penetration);\n     //   circle.position.y -= penetrationLine2.y * (penetration);\n\n        success(bodyRect,\n                rectangle,\n                bodyCirc,\n                circle,\n                penetration,\n                penetrationLine2)\n\n        //success(circle, aabb, penetration, penetrationLine2);\n        return\n\n    }\n    else if(radius * radius > dist)\n    {\n        var penetrationLine = localCirclePosition.minus(closestPoint);\n\n        var penetration = penetrationLine.length() - radius;\n\n        if(penetration < 0)\n        {\n            penetrationLine.normalize();\n\n            penetrationLine2 = this.temp3//new Vector();\n            penetrationLine2.x = (penetrationLine.x * c) + (penetrationLine.y * s)\n            penetrationLine2.y = (penetrationLine.y * c) - (penetrationLine.x * s)\n\n            // reaction...\n          //  circle.position.x -= penetrationLine2.x * (penetration);\n          //  circle.position.y -= penetrationLine2.y * (penetration);\n\n\n            success(bodyRect,\n                    rectangle,\n                    bodyCirc,\n                    circle,\n                    penetration,\n                    penetrationLine2)\n\n            return\n        }\n    }\n\n    //no collision\n    fail(bodyRect,\n         rectangle,\n         bodyCirc,\n         circle);\n}\n"]}