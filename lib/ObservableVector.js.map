{"version":3,"sources":["../src/ObservableVector.js"],"names":["ObservableVector","cb","scope","x","y","_x","_y","value","call"],"mappings":";;;;;;;;AAAA;;;;;;;;IAQqBA,gB;AAEjB;;;;;;AAMA,8BAAYC,EAAZ,EAAgBC,KAAhB,EACA;AAAA,YADuBC,CACvB,uEAD2B,CAC3B;AAAA,YAD8BC,CAC9B,uEADkC,CAClC;;AAAA;;AACI,aAAKC,EAAL,GAAUF,CAAV;AACA,aAAKG,EAAL,GAAUF,CAAV;;AAEA,aAAKH,EAAL,GAAUA,EAAV;AACA,aAAKC,KAAL,GAAaA,KAAb;AACH;;AAED;;;;;;;;;4BAMA;AACI,mBAAO,KAAKG,EAAZ;AACH,S;0BAEKE,K,EAAO;AACb;AACI,gBAAI,KAAKF,EAAL,KAAYE,KAAhB,EACA;AACI,qBAAKF,EAAL,GAAUE,KAAV;AACA,qBAAKN,EAAL,CAAQO,IAAR,CAAa,KAAKN,KAAlB;AACH;AACJ;;AAED;;;;;;;;4BAMA;AACI,mBAAO,KAAKI,EAAZ;AACH,S;0BAEKC,K,EAAO;AACb;AACI,gBAAI,KAAKD,EAAL,KAAYC,KAAhB,EACA;AACI,qBAAKD,EAAL,GAAUC,KAAV;AACA,qBAAKN,EAAL,CAAQO,IAAR,CAAa,KAAKN,KAAlB;AACH;AACJ;;;;;;kBArDgBF,gB","file":"ObservableVector.js","sourcesContent":["/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n * An observable point is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n */\nexport default class ObservableVector\n{\n    /**\n     * @param {Function} cb - callback when changed\n     * @param {object} scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(cb, scope, x = 0, y = 0)\n    {\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get x()\n    {\n        return this._x;\n    }\n\n    set x(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._x !== value)\n        {\n            this._x = value;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get y()\n    {\n        return this._y;\n    }\n\n    set y(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._y !== value)\n        {\n            this._y = value;\n            this.cb.call(this.scope);\n        }\n    }\n}\n"]}