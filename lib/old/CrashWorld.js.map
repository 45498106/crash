{"version":3,"sources":["../../src/old/CrashWorld.js"],"names":["define","require","exports","module","Group","NarrowPhase","CrashBody","SpatialHash","CrashWorld","staticItems","kinimaticItems","dynamicItems","collisions","narrowPhase","dt","collisionKeys","DEBUG","prototype","init","world","preupdate","add","item","body","_debugView","getDebugView","alpha","view","addChild","type","STATIC","KINIMATIC","DYNAMIC","remove","update","getCollisions","i","children","length","hitTest","postupdate","reset","empty","onCollision","item2","getKey","a","b","registerCollison","type1","type2","size","list","sortAxisList","item1","newItemLeft","position","x","shape","width","j","currentItemRight","canCollide","key","push","retrieveArea","platform","debug","console","log","l","v","a2","castRay","point","point2","constrainToBounds","bounds","y","height","onGround","setBounds","rect","clear"],"mappings":"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","file":"CrashWorld.js","sourcesContent":["define(function (require, exports, module)\n{\n    var Group = require('fido/bob/Group');\n\n  //  var CollisionTest = require('../Group');\n\n    var NarrowPhase = require('./NarrowPhase');\n    var CrashBody = require('./CrashBody');\n    var SpatialHash = require('./SpatialHash');\n\n\n    var CrashWorld = function()\n    {\n        // on hit test against.. platforms\n\n       // this.staticItems = new Group();\n        this.staticItems = new SpatialHash();\n\n        //TODO add this..\n        this.kinimaticItems = new Group();\n\n        // hit test against each other..\n        this.dynamicItems = new Group();\n\n        this.collisions = [];\n        this.narrowPhase = new NarrowPhase();\n\n        this.dt = 1;\n\n        this.collisionKeys = {};\n\n        this.DEBUG = false;\n    }\n\n    CrashWorld.prototype.init = function(world)\n    {\n        // init..\n    }\n\n    CrashWorld.prototype.preupdate = function()\n    {\n        // init..\n    }\n\n    CrashWorld.prototype.add = function(item)\n    {\n        if(!item.body)return;\n\n        if(this.DEBUG)\n        {\n            if(!item._debugView)\n            {\n                item._debugView = item.body.getDebugView();\n                 item._debugView.alpha = 0.5;\n                if(item.view)\n                {\n                     item.view.addChild( item._debugView );\n                }\n            }\n        }\n\n        if(item.body.type === CrashBody.STATIC)\n        {\n            this.staticItems.add(item);\n//            this.staticHash.add()\n          //  item.body.update();\n        }\n        else if(item.body.type === CrashBody.KINIMATIC)\n        {\n            this.kinimaticItems.add(item);\n        }\n        else if(item.body.type === CrashBody.DYNAMIC)\n        {\n            this.dynamicItems.add(item);\n        }\n\n\n    }\n\n    CrashWorld.prototype.remove = function(item)\n    {\n        if(!item.body)return;\n\n\n        if(item.body.type === CrashBody.STATIC)\n        {\n            this.staticItems.remove(item);\n        }\n        else if(item.body.type === CrashBody.KINIMATIC)\n        {\n            this.kinimaticItems.remove(item);\n        }\n        else if(item.body.type === CrashBody.DYNAMIC)\n        {\n            this.dynamicItems.remove(item);\n        }\n    }\n\n    CrashWorld.prototype.update = function()\n    {\n\n        //TODO broadphase\n\n        var collisions = this.getCollisions();\n\n        for (var i = 0; i < this.dynamicItems.children.length; i++)\n        {\n            this.dynamicItems.children[i].body.update(this.dt);\n        };\n\n        this.narrowPhase.hitTest(collisions);\n       // };\n\n\n    }\n\n    CrashWorld.prototype.postupdate = function(item)\n    {\n\n    }\n\n    CrashWorld.prototype.reset = function()\n    {\n        this.staticItems.empty();\n        this.kinimaticItems.empty();\n        this.dynamicItems.empty();\n\n        this.collisions.length = 0;\n\n        this.narrowPhase.reset();\n\n    }\n\n    CrashWorld.prototype.onCollision = function(item, item2)\n    {\n\n    }\n\n\n    CrashWorld.prototype.getKey = function(a, b)\n    {\n        return (a << 12) + b;\n    }\n\n    CrashWorld.prototype.registerCollison = function(type1, type2)\n    {\n//        key = type1 + \":\"+ type2;\n\n        this.collisionKeys[this.getKey(type1, type2)] = true;\n        this.collisionKeys[this.getKey(type2, type1)] = true;\n\n        //console.log(this.collisionKeys);\n\n    }\n\n    CrashWorld.prototype.getCollisions = function()\n    {\n        this.collisions.length = 0;\n\n        var size = 0;\n\n    /*    // hit test all dynamic - dynamic objects\n        for (var i = 0; i < this.dynamicItems.children.length; i++)\n        {\n\n            for (var j = i+1; j < this.dynamicItems.children.length; j++)\n            {\n                var item = this.dynamicItems.children[i];\n                var platform = this.dynamicItems.children[j];\n\n                var canCollide = true;\n                var key = this.getKey(platform.type, item.type)\n     //           console.log(key)\n                //TODO items that are the same cannot collide..\n                if(!this.collisionKeys[key])//platform.type === item.type && !item.collideWithSelf)\n                {\n                    canCollide = false;\n                }\n                else\n                {\n                    if(!platform.canCollide || !item.canCollide)\n                    {\n                        canCollide = false;\n                    }\n                }\n\n                if(canCollide)\n                {\n                    this.collisions.push(item,\n                                        platform)\n                }\n            }\n        };\n*/\n\n\n        //SAP!\n        var list =  this.dynamicItems.children\n        this.sortAxisList( list );\n\n        for (var i = 0; i < list.length; i++)\n        {\n            var item1 = list[i];\n            var newItemLeft = item1.body.position.x + item1.body.shape.x + item1.body.shape.width + 5;;\n\n            for (var j = i+1; j < list.length; j++)\n            {\n                var item2 = list[j];\n\n                var currentItemRight = item2.body.position.x + item2.body.shape.x - 5;\n                if(newItemLeft <= currentItemRight)\n                {\n                    break;\n                }\n                else\n                {\n                    var canCollide = true;\n                    var key = this.getKey(item2.type, item1.type)\n                    //TODO items that are the same cannot collide..\n\n                    if(!this.collisionKeys[key])//platform.type === item.type && !item.collideWithSelf)\n                    {\n                        canCollide = false;\n                    }\n                    else\n                    {\n                        if(!item2.canCollide || !item1.canCollide)\n                        {\n                            canCollide = false;\n                        }\n                    }\n\n                    if(canCollide)\n                    {\n                       this.collisions.push(item1,\n                                             item2);\n                    }\n                }\n            }\n        };\n        ///\n\n        // hit test all static - dynamic objects\n        for (var i = 0; i < this.dynamicItems.children.length; i++)\n        {\n            var item = this.dynamicItems.children[i];\n            var staticItems = this.staticItems.retrieveArea(item);\n\n            for (var j = 0; j < staticItems.length; j++)\n            {\n                var platform = staticItems[j];\n\n                if(platform.canCollide && item.canCollide)\n                {\n                   // if(item.DEBUG)\n                   // {\n                   //     console.log(item, platform)\n                   // }\n\n                    this.collisions.push(item,\n                                       platform)\n                }\n            }\n        };\n\n        // hit test all kinimatic - dynamic objects\n        for (var i = 0; i < this.dynamicItems.children.length; i++)\n        {\n\n            for (var j = 0; j < this.kinimaticItems.children.length; j++)\n            {\n                var item = this.dynamicItems.children[i];\n                var platform = this.kinimaticItems.children[j];\n\n                var canCollide = true;\n                var key = this.getKey(platform.type, item.type)\n                //TODO items that are the same cannot collide..\n\n                if(!this.collisionKeys[key])//platform.type === item.type && !item.collideWithSelf)\n                {\n                    canCollide = false;\n                }\n                else\n                {\n                    if(!item.canCollide || !platform.canCollide)\n                    {\n                        canCollide = false;\n                    }\n                }\n\n                if(canCollide)\n                {\n                    //var canCollide = true;\n                    //  var key = this.getKey(item.type, platform.type)\n                    //TODO items that are the same cannot collide..\n                    //if(this.collisionKeys[key])//platform.type === item.type && !item.collideWithSelf)\n                    //{\n                    if(item.debug)\n                    {\n                        console.log(platform);\n\n                    }\n                        this.collisions.push(item,\n                                        platform)\n                   // }\n\n                }\n            }\n        };\n\n        // finallly hit tes the bounds..\n\n\n        return this.collisions;\n    }\n\n\n    CrashWorld.prototype.sortAxisList = function(a)\n    {\n        for(var i=1,l=a.length; i<l; i++)\n        {\n            var v = a[i];\n            for(var j=i - 1;j>=0;j--)\n            {\n                var a2 = a[j];\n\n                if(a2.body.shape.x + a2.body.position.x  <= v.body.shape.x + v.body.position.x )\n                {\n                    break;\n                }\n\n                a[j+1] = a[j];\n            }\n\n            a[j+1] = v;\n        }\n\n        return a;\n    };\n\n    CrashWorld.prototype.castRay = function(point, point2)\n    {\n\n    }\n\n\n    CrashWorld.prototype.constrainToBounds = function()\n    {\n        var b = this.bounds;\n\n\n        //TODO add some boundng blocks..\n        for (var i = 0; i < this.dynamicItems.children.length; i++)\n        {\n            var body = this.dynamicItems.children[i].body;\n\n            // Constrain the x\n            if(body.position.x + body.shape.x < b.x)\n            {\n                body.position.x = b.x + body.shape.x;\n            }\n            else if(body.position.x + body.shape.x + body.shape.width > b.x + b.width)\n            {\n                body.position.x = b.x + b.width - (body.shape.x + body.shape.width);\n            }\n\n            // Constrain the y\n            if(body.position.y + body.shape.y < b.y)\n            {\n                body.position.y = b.y + body.shape.y;\n            }\n            else if(body.position.y + body.shape.y + body.shape.height > b.y + b.height)\n            {\n                body.position.y = b.y + b.height - (body.shape.y + body.shape.height);\n                this.dynamicItems.children[i].onGround = true;\n            }\n        };\n    }\n\n    CrashWorld.prototype.setBounds = function(rect)\n    {\n        this.bounds.x = rect.x;\n        this.bounds.y = rect.y;\n        this.bounds.width = rect.width;\n        this.bounds.height = rect.height;\n\n\n    }\n\n    CrashWorld.prototype.clear = function()\n    {\n        this.reset();\n    }\n\n    module.exports = CrashWorld;\n\n});"]}