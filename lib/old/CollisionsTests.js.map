{"version":3,"sources":["../../src/old/CollisionsTests.js"],"names":["define","require","exports","module","PIXI","Vector","CollisionTests","hitTest","item","group","hitFunction","missFunction","itemsToHitTest","children","i","length","hitTestAABBAABB","item2","rect1","hitArea","rect2","p1x","x","position","p1y","y","p2x","p2y","topDist","height","bottomDist","leftDist","width","rightDist","dist","penetrationLine","penetration"],"mappings":";;AAAAA,OAAO,UAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EACP;AACI,QAAIC,OAAOH,QAAQ,MAAR,CAAX;AACA,QAAII,SAASJ,QAAQ,wBAAR,CAAb;;AAEA,QAAIK,iBAAiB,SAAjBA,cAAiB,GACrB,CAEC,CAHD;;AAMAA,mBAAeC,OAAf,GAAyB,UAASC,IAAT,EAAeC,KAAf,EAAsBC,WAAtB,EAAmCC,YAAnC,EACzB;AACI,YAAIC,iBAAiBH,MAAMI,QAA3B;;AAEA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,eAAeG,MAAnC,EAA2CD,GAA3C,EACA;AACIR,2BAAeU,eAAf,CAA+BR,IAA/B,EAAsCI,eAAeE,CAAf,CAAtC,EAAyDJ,WAAzD,EAAsEC,YAAtE;AACH;AACJ,KARD;;AAUAL,mBAAeU,eAAf,GAAiC,UAASR,IAAT,EAAeS,KAAf,EAAsBP,WAAtB,EAAmCC,YAAnC,EACjC;AACI,YAAIO,QAAQV,KAAKW,OAAjB;AACA,YAAIC,QAAQH,MAAME,OAAlB;;AAEA,YAAIE,MAAMH,MAAMI,CAAN,GAAUd,KAAKe,QAAL,CAAcD,CAAlC;AACA,YAAIE,MAAMN,MAAMO,CAAN,GAAUjB,KAAKe,QAAL,CAAcE,CAAlC;;AAEA,YAAIC,MAAMN,MAAME,CAAN,GAAUL,MAAMM,QAAN,CAAeD,CAAnC;AACA,YAAIK,MAAMP,MAAMK,CAAN,GAAUR,MAAMM,QAAN,CAAeE,CAAnC;;AAEA,YAAIG,UAAYJ,MAAMN,MAAMW,MAAb,GAAuBF,GAAtC;AACA,YAAIG,aAAcH,MAAMP,MAAMS,MAAb,GAAuBL,GAAxC;;AAEA,YAAIO,WAAYV,MAAMH,MAAMc,KAAb,GAAsBN,GAArC;AACA,YAAIO,YAAaP,MAAMN,MAAMY,KAAb,GAAsBX,GAAtC;;AAEA,YAAIa,OAAO,MAAX;;AAEA,YAAGH,WAAWG,IAAd,EAAmBA,OAAOH,QAAP;AACnB,YAAGE,YAAYC,IAAf,EAAoBA,OAAOD,SAAP;AACpB,YAAGL,UAAUM,IAAb,EAAkBA,OAAON,OAAP;AAClB,YAAGE,aAAaI,IAAhB,EAAqBA,OAAOJ,UAAP;;AAErB,YAAGI,OAAO,CAAV,EACA;;AAGI;AACA,gBAAIC,kBAAkB,IAAI9B,MAAJ,EAAtB;;AAEA,gBAAG6B,QAAQH,QAAX,EACA;AACII,gCAAgBb,CAAhB,GAAoB,CAAC,CAArB;AACAa,gCAAgBV,CAAhB,GAAoB,CAApB;AACH,aAJD,MAKK,IAAGS,QAAQD,SAAX,EACL;AACIE,gCAAgBb,CAAhB,GAAoB,CAApB;AACAa,gCAAgBV,CAAhB,GAAoB,CAApB;AACH,aAJI,MAKA,IAAGS,QAAQN,OAAX,EACL;AACIO,gCAAgBb,CAAhB,GAAoB,CAApB;AACAa,gCAAgBV,CAAhB,GAAoB,CAAC,CAArB;AACH,aAJI,MAKA,IAAGS,QAAQJ,UAAX,EACL;AACIK,gCAAgBb,CAAhB,GAAoB,CAApB;AACAa,gCAAgBV,CAAhB,GAAoB,CAApB;AACH;;AAED,gBAAIW,cAAc,CAACF,IAAnB;;AAEA,gBAAGxB,WAAH,EAAeA,YAAYF,IAAZ,EAAkBS,KAAlB,EAAyBmB,WAAzB,EAAsCD,eAAtC;;AAEf,mBAAO,IAAP;AACA;AACH,SAlCD,MAoCA;AACI,gBAAGxB,YAAH,EAAgBA,aAAaH,IAAb,EAAmBS,KAAnB;;AAEhB,mBAAO,KAAP;AACH;AAEJ,KAlED;;AAoEAd,WAAOD,OAAP,GAAiBI,cAAjB;AAEH,CA3FD","file":"CollisionsTests.js","sourcesContent":["define(function (require, exports, module) \n{\n    var PIXI = require('PIXI');\n    var Vector = require('fido/game/crash/Vector');\n\n    var CollisionTests = function()\n    {\n      \n    }\n\n\n    CollisionTests.hitTest = function(item, group, hitFunction, missFunction)\n    {\n        var itemsToHitTest = group.children;\n\n        for (var i = 0; i < itemsToHitTest.length; i++) \n        {\n            CollisionTests.hitTestAABBAABB(item,  itemsToHitTest[i], hitFunction, missFunction);\n        };\n    }\n\n    CollisionTests.hitTestAABBAABB = function(item, item2, hitFunction, missFunction)\n    {\n        var rect1 = item.hitArea;\n        var rect2 = item2.hitArea;\n\n        var p1x = rect1.x + item.position.x;\n        var p1y = rect1.y + item.position.y;\n\n        var p2x = rect2.x + item2.position.x;\n        var p2y = rect2.y + item2.position.y;\n\n        var topDist =  (p1y + rect1.height) - p2y;\n        var bottomDist = (p2y + rect2.height) - p1y;\n\n        var leftDist = (p1x + rect1.width) - p2x;\n        var rightDist = (p2x + rect2.width) - p1x;\n\n        var dist = 999999;\n        \n        if(leftDist < dist)dist = leftDist;\n        if(rightDist < dist)dist = rightDist;\n        if(topDist < dist)dist = topDist;\n        if(bottomDist < dist)dist = bottomDist;\n\n        if(dist > 0)\n        {\n\n\n            // hit!\n            var penetrationLine = new Vector();\n\n            if(dist == leftDist)\n            {\n                penetrationLine.x = -1;\n                penetrationLine.y = 0;\n            }\n            else if(dist == rightDist)\n            {\n                penetrationLine.x = 1;\n                penetrationLine.y = 0;\n            }\n            else if(dist == topDist)\n            {\n                penetrationLine.x = 0;\n                penetrationLine.y = -1;\n            }\n            else if(dist == bottomDist)\n            {\n                penetrationLine.x = 0;\n                penetrationLine.y = 1;\n            }\n\n            var penetration = -dist;\n\n            if(hitFunction)hitFunction(item, item2, penetration, penetrationLine)\n\n            return true;\n            //item.collisonReaction();\n        }\n        else\n        {\n            if(missFunction)missFunction(item, item2);\n\n            return false;\n        }\n\n    }\n\n    module.exports = CollisionTests \n\n});"]}