{"version":3,"sources":["../src/Body.js"],"names":["Body","data","type","DYNAMIC","shapes","position","create","lastPosition","interpolatedPosition","velocity","acceleration","bounce","maxSpeed","gravity","friction","active","timeScale","boundingBox","boundsDirty","shape","indexOf","push","minX","Infinity","minY","maxX","maxY","i","length","box","Math","max","upper","x","y","min","lower","set","deltaTime","speed","STATIC","KINIMATIC","NONE"],"mappings":"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","file":"Body.js","sourcesContent":["import Vector from './Vector';\nimport AABB from './AABB';\n\nexport default class Body\n{\n\n    constructor(data = {})\n    {\n        this.type = Body.DYNAMIC;\n\n        this.shapes = data.shapes || [];\n\n        this.position = Vector.create();\n        this.lastPosition = Vector.create();\n        this.interpolatedPosition = Vector.create();\n\n        this.velocity = Vector.create();\n        this.acceleration = Vector.create();\n        this.bounce = 0;\n\n        this.maxSpeed = data.maxSpeed || 5;\n\n        this.gravity = data.gravity || 0;//0.1;\n\n        this.friction = data.friction || 0.9;\n\n        this.active = true;\n\n        this.timeScale = 1;\n\n        this.boundingBox = new AABB();\n        this.boundsDirty = true;\n\n    }\n\n    addShape(shape)\n    {\n        if(this.shapes.indexOf(shape) === -1)\n        {\n            this.shapes.push(shape);\n        }\n\n        this.boundsDirty = true;\n    }\n\n    updateBounds()\n    {\n        this.boundsDirty = false;\n\n        let minX = Infinity;\n        let minY = Infinity;\n\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (var i = 0; i < this.shapes.length; i++) {\n\n            const box = this.shapes[i].boundingBox;\n\n            maxX = Math.max(maxX, box.upper.x);\n            maxY = Math.max(maxY, box.upper.y);\n            minX = Math.min(minX, box.lower.x);\n            minY = Math.min(minY, box.lower.y);\n        }\n\n        this.boundingBox.set(minX, minY, maxX, maxY);\n    }\n\n    update(deltaTime)\n    {\n        if(!this.active)return;\n\n        var velocity = this.velocity\n\n        velocity.x += this.acceleration.x * deltaTime;\n        velocity.y += this.acceleration.y * deltaTime;\n\n        // frsition...\n        velocity.y *= this.friction;\n        velocity.x *= this.friction;\n\n        velocity.y += this.gravity * this.timeScale;\n\n        var speed = velocity.length();\n\n        if(speed > 0)\n        {\n            velocity.x /= speed;\n            velocity.y /= speed;\n\n            speed = Math.min(speed,this.maxSpeed);\n\n            velocity.x *= speed;\n            velocity.y *= speed;\n        }\n\n\n        this.position.x += velocity.x * this.timeScale * deltaTime;\n        this.position.y += velocity.y * this.timeScale * deltaTime;\n    }\n\n    reset()\n    {\n        this.velocity.set(0);\n        this.acceleration.set(0);\n\n        this.active = true;\n    }\n}\n\nBody.STATIC = 0;\nBody.KINIMATIC = 1;\nBody.DYNAMIC = 2;\nBody.NONE = 3;\n\n/*\n    getDebugView(color)\n    {\n        var shape = this.shape;\n        var color = color || colors[this.type]\n        return new PIXI.Graphics().beginFill(color).drawRect(shape.x,shape.y,shape.width, shape.height)\n\n    }\n\n    CrashBody.fromRect = function(x, y, w, h){\n\n        return new CrashBody(new PIXI.Rectangle(x,y,w,h));\n    }\n\n    CrashBody.STATIC = 0;\n    CrashBody.KINIMATIC = 1;\n    CrashBody.DYNAMIC = 2;\n    CrashBody.NONE = 3;\n\n    colors = [\n        0x463a78,\n        0xFFFF00,\n        0xFF0000,\n        0x0000FF\n    ]\n    module.exports = CrashBody;\n\n});*/"]}